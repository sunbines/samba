#!/usr/bin/env python

import os, string
from samba_utils import MODE_755
from waflib import Logs

# This function checks if a perl module is installed on the system.
def check_system_perl_module(conf, module, version=None):
    bundle_name = module.replace('::', '_')
    module_check = module

    # Create module string with version
    if version:
        module_check = module + ' ' + str(version)

    # Check if we have to bundle it.
    if conf.LIB_MUST_BE_BUNDLED(bundle_name.lower()):
        return False

    # Check for system perl module
    if conf.check_perl_module(module_check) is None:
        return False

    conf.define('USING_SYSTEM_%s' % bundle_name.upper(), 1)

    return True

def options(opt):
    return

def configure(conf):
    # Check if perl(Parse::Yapp::Driver) is available.
    check_system_perl_module(conf, "Parse::Yapp::Driver", 1.05)

    # yapp is used for building the parser
    conf.find_program('yapp', var='YAPP')

def build(bld):

    # we want to prefer the git version of the parsers if we can.
    # Only if the source has changed do we want to re-run yapp
    # But we force the developer to use the pidl standalone build
    # to regenerate the files.
    # TODO: only warn in developer mode and if 'git diff HEAD'
    #       shows a difference
    warn_about_grammar_changes = ('PIDL_BUILD_WARNINGS' in bld.env and (
        bld.IS_NEWER('idl.yp', 'lib/Parse/Pidl/IDL.pm') or
        bld.IS_NEWER('expr.yp', 'lib/Parse/Pidl/Expr.pm')))

    if warn_about_grammar_changes:
        Logs.warn('''
Pidl grammar files have changed. Please use the pidl standalone build
to regenerate them with yapp.

$ cd ../pidl
$ perl Makefile.PL
$ make lib/Parse/Pidl/IDL.pm lib/Parse/Pidl/Expr.pm
$ git add lib/Parse/Pidl/IDL.pm lib/Parse/Pidl/Expr.pm
$ git commit
$ cd -

If your 100% sure you haven't changed idl.yp and expr.yp
try this to avoid this message:

$ touch ../pidl/lib/Parse/Pidl/IDL.pm ../pidl/lib/Parse/Pidl/Expr.pm
''')

